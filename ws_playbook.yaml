---

  - name: quentin_ws_playbook
    hosts: localhost
    become: yes
    vars:
      account: 'q'

    tasks:

      # APT management
      - name: Update/upgrade the apt
        block:
        - name: Update the apt
          ansible.builtin.apt:
            update_cache=yes
            force_apt_get=yes
        - name: Upgrade the apt
          ansible.builtin.apt:
            upgrade=yes

      # APT packages
      - name: Install apt packages
        apt:
          pkg:
          - curl
          - git
          - wget
          - zsh

      # Ubuntu folders
      - name: Creating additional folders
        block:
          - name: folder TEMP
            ansible.builtin.file:
              path: "/home/{{account}}/TEMP/"
              state: directory
            become_user: "{{account}}"
          - name: folder GitHub
            ansible.builtin.file:
              path: "/home/{{account}}/Documents/GitHub"
              state: directory
            become_user: "{{account}}"
          - name: folder Logiciels
            ansible.builtin.file:
              path: "/home/{{account}}/Logiciels"
              state: directory
            become_user: "{{account}}"

      # Git parameters
      - name: Git Configuration
        git_config:
          name: user.email
          value: huchetq@gmail.com
        git_config:
          name: user.name
          value: QuentinHuchet

      # Terminal installations
      # OhMyZsh
      - name: Terminal Configuration
        tags: terminal
        block:

        # APT packages (terminator)
        - name: Apt terminal utils
          apt:
            pkg:
            - terminator

        # Create the required paths
        - name: Terminator required paths
          file:
            path: "/home/{{account}}/.config/terminator/plugins/"
            state: directory
            recurse: True
          become_user: "{{account}}"
        - name: Terminator-themes plugin
          shell:
            "wget https://git.io/v5Zwz -O /home/{{account}}/.config/terminator/plugins/terminator-themes.py"
          become_user: "{{account}}"

        # Setting the terminator from configfile
        - name: terminator configfile
          ansible.builtin.shell: |
            cp -r config/terminator_config /home/{{account}}/.config/terminator/config

        # CLI dependencies (gcloud, kubectl)
        # - name: CLI dependencies
        #   block:
        #     - name: kubectl
        #       ansible.builtin.shell: |
        #         curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl 
        #         chmod +x ./kubectl
        #         sudo mv ./kubectl /usr/local/bin/kubectl
        #         kubectl version --client
        #     - name: gcloud
        #       ansible.builtin.shell: |
        #         curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl 
        #         chmod +x ./kubectl
        #         sudo mv ./kubectl /usr/local/bin/kubectl
        #         kubectl version --client

        # zsh/OhMyZsh
        - name: zsh/OhMyZsh
          block:
            - name: Downloading OhMyZsh
              ansible.builtin.uri:
                url: https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh
                dest: /home/{{account}}/TEMP/
            - name: Deleting .oh-my-zsh present file
              ansible.builtin.file:
                path: /home/{{account}}/.oh-my-zsh
                state: absent
              become_user: "{{account}}"
            - name: Installing fresh version
              ansible.builtin.shell: |
                sh /home/{{account}}/TEMP/install.sh --keep-zshrc
              become_user: "{{account}}"
            - name: Installing OhMyZsh deps
              ansible.builtin.shell: |
                git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
                git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
              become_user: "{{account}}"
            - name: Set OhMyZsh as default shell
              user: name="{{account}}" shell=/usr/bin/zsh

      - name: Working environment
        block:

        # Julia LTS 1.6
        # - name : Julia
        #   block:
            # - name: Downloading Julia LTS 1.6
            #   ansible.builtin.unarchive:
            #     src: https://julialang-s3.julialang.org/bin/linux/x64/1.6/julia-1.6.7-linux-x86_64.tar.gz
            #     dest: /home/{{account}}/Logiciels/Julia
            #     remote_src: yes
            # - name: Julia to path
            #   ansible.builtin.shell: PATH=$PATH:/home/{{account}}/Logiciels/

        # ODBC Drivers (PostGres and MySQL)
        - name : ODBC drivers
          block:
            - name: apt deps
              ansible.builtin.apt:
                pkg:
                - odbc-postgresql
                - unixodbc
            - name: MySQL wget driver
              ansible.builtin.shell: |
                wget https://dev.mysql.com/get/Downloads/Connector-ODBC/8.0/mysql-connector-odbc-8.0.19-linux-glibc2.12-x86-64bit.tar.gz
                tar zxvf mysql-connector-odbc-8.0.19-linux-glibc2.12-x86-64bit.tar.gz
                cp mysql-connector-odbc-8.0.19-linux-glibc2.12-x86-64bit/bin/* /usr/local/bin
                cp mysql-connector-odbc-8.0.19-linux-glibc2.12-x86-64bit/lib/* /usr/local/lib
                /usr/local/bin/myodbc-installer -a -d -n "MySQL ODBC 8.0 Driver" -t "Driver=/usr/local/lib/libmyodbc8w.so"
                rm -rf mysql-connector-odbc*
              become_user: "{{account}}"

        # Docker
        - name : Docker
          block:
            - name : Uninstall old Docker versions
              ansible.builtin.shell: apt-get remove docker docker-engine docker.io containerd runc
              ignore_errors: True
            - name: Install docker dependencies
              ansible.builtin.apt:
                pkg:
                - ca-certificates
                - curl
                - gnupg
                - lsb-release
            - name: Set up Docker repository
              ansible.builtin.shell: |
                mkdir -p /etc/apt/keyrings
                curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg -y
                echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
                $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            - name: Update the apt
              ansible.builtin.apt:
                update_cache=yes
                force_apt_get=yes
            - name: Installing Docker
              ansible.builtin.apt:
                  pkg:
                  - docker-ce
                  - docker-ce-cli
                  - containerd.io
                  - docker-compose-plugin
            - name: Docker post-install
              ansible.builtin.shell: |
                groupadd docker
                usermod -aG docker $USER
                newgrp docker
                systemctl enable docker.service
                systemctl enable containerd.service